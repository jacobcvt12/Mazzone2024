"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
res
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
text.dat
res <- feats %>%
inner_join(status) %>%
filter(set=="CV125") %>%
inner_join(nodules) %>%
# filter(TESTFL) %>%
mutate(group=case_when(status == "Cancer" ~ "Lung cancer",
LNDYN == "Yes" ~ "Non-cancer, benign legions",
TRUE ~ "Non-cancer, no biopsy"),
bin=as.numeric(spread_var),
group=factor(group, levels=c("Non-cancer, no biopsy",
"Non-cancer, benign legions",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
res
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
text.dat
x.align <- 0.15
tgNCNB  <- textGrob(text.dat$label[1],
x=unit(x.align, "npc"),
y=unit(0.97, "npc"),
gp=gpar(cex=1, hjust=0))
tgNCBL  <- textGrob(text.dat$label[2],
x=unit(x.align, "npc"),
y=unit(0.67, "npc"),
gp=gpar(cex=1, hjust=0))
tgLC  <- textGrob(text.dat$label[3],
x=unit(x.align, "npc"),
y=unit(0.37, "npc"),
gp=gpar(cex=1, hjust=0))
fig <- res %>%
# filter(group != "Lung cancer") %>%
ggplot(aes(x=bin, y=value, group=id)) +
geom_line(color="grey") +
coord_cartesian(ylim = c(-0.25, 0.25)) +
facet_grid(group~armlevel,
scales="free_x",
space="free_x",
switch="x",
labeller=labeller(armlevel=arm.labels),) +
labs(y="Fragmentation Profile", x="") +
theme_classic(base_size = 16) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.y = element_blank(),
strip.background = element_blank())
fig <- ggdraw(fig) + draw_grob(tg10p) + draw_grob(tg12p) + draw_grob(tg16p) +
draw_grob(tg16q) + draw_grob(tg17p) + draw_grob(tg17q) + draw_grob(tg18p) +
draw_grob(tg18q) + draw_grob(tg19p) + draw_grob(tg19q) + draw_grob(tg20p) +
draw_grob(tg20q) + draw_grob(tg21q) + draw_grob(tg22q) +
draw_grob(tgNCNB) + draw_grob(tgNCBL) + draw_grob(tgLC)
fig
q()
library(pROC)
?smooth
q()
q()
install.packages('tidymodels')
install.packages("tidymodels")
install.packages("tidymodels")
q()
q()
622/782
library(aws.s3)
library(tidyverse)
x <- s3read_using(FUN=read_csv, bucket="dlcst-detection-training-crispi", object="features/LDT_V1_training_manifest.csv")
x
4/15
4/14
2/11
q()
q()
q()
library(delfird)
config <- get_deployment_config(deployment = 'prod')
entity_ids <- c(
"HHV7GDSX5-L1-DLP00382",
"test1MreadsDL000052HLP0AMY"
)
fastq_reanalysis_df <- latest_fastq_reanalysis_list_for_entities(entity_ids, config)
fastq_reanalysis_df
q()
q()
library(tidyverse)
q()
q()
q()
setwd("Delfi/GitRepos/Mazzone2024")
setwd("figure2a")
library(aws.s3)
library(tidyverse)
library(cowplot)
library(grid)
library(forcats)
status <- s3read_using(FUN=read_csv,
bucket="dlcst-detection-training-crispi",
object="features/ldt_v1_training_ids.csv") %>%
filter(set %in% c("TRAINING", "CV125"))
status <- s3read_using(FUN=read_csv,
bucket="dlcst-detection-training-crispi",
object="features/ldt_v1_training_ids.csv") %>%
filter(set %in% c("TRAINING", "CV125"))
feats <- s3read_using(FUN=read_csv,
bucket="dlcst-detection-training-crispi",
object="features/ldt_v1_features_long.csv.gz") %>%
filter(feature=="centeredslratio") %>%
inner_join(status)
nodules <- s3read_using(FUN=read_csv,
bucket="delfi-unblinded",
object="ldt_analysis/training/clinical_data/training_v1/adsl_delfi-l101_ldt_train_analysis_30MAY2023.csv")
arms <- s3read_using(FUN=read_tsv,
bucket="delfi-central-data",
object="bins_100Kb_to_5Mb.tsv.gz") %>%
distinct(armlevel, bin)
arm <- arms %>% group_by(armlevel) %>%
summarize(n=n(), .groups="drop") %>%
mutate(arm = as.character(armlevel))
res <- feats %>%
inner_join(status) %>%
filter(set=="TRAINING") %>%
inner_join(nodules) %>%
# filter(TESTFL) %>%
mutate(group=case_when(status == "Cancer" ~ "Lung cancer",
TRUE ~ "Non-cancer"),
bin=as.numeric(spread_var),
group=factor(group, levels=c("Non-cancer",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
x.align <- 0.15
tgNC  <- textGrob(text.dat$label[1],
x=unit(x.align, "npc"),
y=unit(0.93, "npc"),
gp=gpar(cex=0.5, hjust=0))
tgLC  <- textGrob(text.dat$label[2],
x=unit(x.align, "npc"),
y=unit(0.48, "npc"),
gp=gpar(cex=0.5, hjust=0))
fig <- res %>%
ggplot(aes(x=bin, y=value, group=id)) +
geom_line(color="grey", linewidth=0.1, alpha=0.8) +
coord_cartesian(ylim = c(-0.25, 0.25)) +
facet_grid(group~armlevel,
scales="free_x",
space="free_x",
switch="x") +
labs(y="Fragmentation Profile", x="") +
theme_classic(base_size = 6.5) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.y = element_blank(),
strip.background = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.spacing.y = unit(1, "cm", data=NULL),
plot.margin = unit(c(1, 0.5, 0, 0.5), "cm"))
gt_fig <- ggplot_gtable(ggplot_build(fig))
widths <- gt_fig$widths
widths_numeric <- as.numeric(widths)
which_facets <- str_detect(as.character(gt_fig$widths), "null")
which_small <- widths_numeric < 28.6
multipliers <- 28.6/widths_numeric
gt_fig$widths[which_facets & which_small] <- gt_fig$widths[which_facets & which_small] * multipliers[which_facets & which_small]
fig <- ggdraw(gt_fig) + draw_grob(tgNC) + draw_grob(tgLC)
fig
nodules
colnames(nodules)
res <- feats %>%
inner_join(status) %>%
filter(set=="TRAINING") %>%
# inner_join(nodules) %>%
# filter(TESTFL) %>%
mutate(group=case_when(status == "Cancer" ~ "Lung cancer",
TRUE ~ "Non-cancer"),
bin=as.numeric(spread_var),
group=factor(group, levels=c("Non-cancer",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
x.align <- 0.15
tgNC  <- textGrob(text.dat$label[1],
x=unit(x.align, "npc"),
y=unit(0.93, "npc"),
gp=gpar(cex=0.5, hjust=0))
tgLC  <- textGrob(text.dat$label[2],
x=unit(x.align, "npc"),
y=unit(0.48, "npc"),
gp=gpar(cex=0.5, hjust=0))
fig <- res %>%
ggplot(aes(x=bin, y=value, group=id)) +
geom_line(color="grey", linewidth=0.1, alpha=0.8) +
coord_cartesian(ylim = c(-0.25, 0.25)) +
facet_grid(group~armlevel,
scales="free_x",
space="free_x",
switch="x") +
labs(y="Fragmentation Profile", x="") +
theme_classic(base_size = 6.5) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.y = element_blank(),
strip.background = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.spacing.y = unit(1, "cm", data=NULL),
plot.margin = unit(c(1, 0.5, 0, 0.5), "cm"))
gt_fig <- ggplot_gtable(ggplot_build(fig))
widths <- gt_fig$widths
widths_numeric <- as.numeric(widths)
which_facets <- str_detect(as.character(gt_fig$widths), "null")
which_small <- widths_numeric < 28.6
multipliers <- 28.6/widths_numeric
gt_fig$widths[which_facets & which_small] <- gt_fig$widths[which_facets & which_small] * multipliers[which_facets & which_small]
fig <- ggdraw(gt_fig) + draw_grob(tgNC) + draw_grob(tgLC)
fig
status
x <- read_csv("~/Delfi/GitRepos/reproduce_lucas_wflow/data/lucas_5mbs_delfi473.csv")
x
x = read_csv("~/Delfi/GitRepos/reproduce_lucas_wflow/data/training-set.csv")
x
colnames(x)
bins5mb <- read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv"))
library(RCurl)
bins5mb <- read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv"))
bins5mb
x
load("~/Delfi/GitRepos/reproduce_lucas_wflow/code/rlucas/data/prediction_lucas.rda")
arm
arms
preds
status <-
load(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda"))
status <-
load(getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda"))
status <-
bins5mb <-
read_csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv"))
status <-
bins5mb <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv"))
bins5mb
status <-
bins5mb <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
distinct(bin, arm)
arms
status <-
arms <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
distinct(bin, arm)
status <-
arms <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
distinct(bin, arm) %>%
select(armlevel=arm, bin)
status <-
getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda")
status <-
load(url("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda"))
status
# Load preds to get training data status
load(url("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda"))
preds
feats <- s3read_using(FUN=read_csv,
bucket="dlcst-detection-training-crispi",
object="features/ldt_v1_features_long.csv.gz") %>%
filter(feature=="centeredslratio") %>%
inner_join(status)
feats
feats <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/training-set.csv"))
feats
feats <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/training-set.csv")) %>%
select(id, starts_with("ratio")) %>%
pivot_longer(cols=-c(id),
names_to=bin) %>%
mutate(bin=as.numeric(str_remove(bin, "ratio_")))
feats <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/training-set.csv")) %>%
select(id, starts_with("ratio")) %>%
pivot_longer(cols=-c(id),
names_to="bin") %>%
mutate(bin=as.numeric(str_remove(bin, "ratio_")))
feats
status
status <- select(preds, id, status=type)
status
arms
arm <- arms %>% group_by(armlevel) %>%
summarize(n=n(), .groups="drop") %>%
mutate(arm = as.character(armlevel))
arm
rm(list=ls())
library(aws.s3)
library(tidyverse)
library(cowplot)
library(grid)
library(forcats)
library(RCurl)
# Load preds to get training data status
load(url("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/code/rlucas/data/prediction_lucas.rda"))
status <- select(preds, id, status=type)
# Load arms for 473 bins
arms <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
distinct(bin, arm) %>%
select(armlevel=arm, bin)
feats <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/training-set.csv")) %>%
select(id, starts_with("ratio")) %>%
pivot_longer(cols=-c(id),
names_to="bin") %>%
mutate(bin=as.numeric(str_remove(bin, "ratio_")))
feats
feats$bin %>% unique()
feats$bin %>% unique() %>% length()
arm <- arms %>% group_by(armlevel) %>%
summarize(n=n(), .groups="drop") %>%
mutate(arm = as.character(armlevel))
res <- feats %>%
inner_join(status) %>%
mutate(group=case_when(status == "cancer" ~ "Lung cancer",
TRUE ~ "Non-cancer"),
group=factor(group, levels=c("Non-cancer",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
res
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
x.align <- 0.15
tgNC  <- textGrob(text.dat$label[1],
x=unit(x.align, "npc"),
y=unit(0.93, "npc"),
gp=gpar(cex=0.5, hjust=0))
tgLC  <- textGrob(text.dat$label[2],
x=unit(x.align, "npc"),
y=unit(0.48, "npc"),
gp=gpar(cex=0.5, hjust=0))
fig <- res %>%
ggplot(aes(x=bin, y=value, group=id)) +
geom_line(color="grey", linewidth=0.1, alpha=0.8) +
coord_cartesian(ylim = c(-0.25, 0.25)) +
facet_grid(group~armlevel,
scales="free_x",
space="free_x",
switch="x") +
labs(y="Fragmentation Profile", x="") +
theme_classic(base_size = 6.5) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.y = element_blank(),
strip.background = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.spacing.y = unit(1, "cm", data=NULL),
plot.margin = unit(c(1, 0.5, 0, 0.5), "cm"))
gt_fig <- ggplot_gtable(ggplot_build(fig))
widths <- gt_fig$widths
widths_numeric <- as.numeric(widths)
which_facets <- str_detect(as.character(gt_fig$widths), "null")
which_small <- widths_numeric < 28.6
multipliers <- 28.6/widths_numeric
gt_fig$widths[which_facets & which_small] <- gt_fig$widths[which_facets & which_small] * multipliers[which_facets & which_small]
fig <- ggdraw(gt_fig) + draw_grob(tgNC) + draw_grob(tgLC)
fig
feats
feats$calue
feats$value
feats %>% group_by(id) %>% summarise(max.ratio=max(value)) %>% ungroup()
feats %>% group_by(id) %>% summarise(max.ratio=max(value)) %>% ungroup() %>% pull(max.ratio)
158+129
# Load arms for 473 bins
arms <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv"))
arms
feats
feats$value
arms
arms$bin %>% unique()
# Load arms for 473 bins
arms <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
mutate(ratio.cor = short.cor/long.cor) %>%
group_by(id) %>%
mutate(ratio.centered = scale(ratio.cor, scale=FALSE)[,1])
arms
arms$arm %>% unique()
arms  %>% filter(!str_detect(arm, "X"))
arms
arms  %>% filter(!str_detect(arm, "X"))
arms  %>% filter(!str_detect(arm, "X")) %>% pull(bin) %>% unique()
arms  %>% filter(!str_detect(arm, "X")) %>% pull(bin) %>% unique() %>% length9)
arms  %>% filter(!str_detect(arm, "X")) %>% pull(bin) %>% unique() %>% length()
# Load arms for 473 bins
feats <-
read.csv(text = getURL("https://raw.githubusercontent.com/cancer-genomics/reproduce_lucas_wflow/master/data/lucas_5mbs_delfi473.csv")) %>%
filter(!str_detect(arm, "X")) %>%
mutate(ratio.cor = short.cor/long.cor) %>%
group_by(id) %>%
mutate(ratio.centered = scale(ratio.cor, scale=FALSE)[,1]) %>%
ungroup()
feats
arms
arms <- distict(feats, bin, arm) %>%
rename(armlevel=arm)
arms <- distinct(feats, bin, arm) %>%
rename(armlevel=arm)
arms
arm <- arms %>% group_by(armlevel) %>%
summarize(n=n(), .groups="drop") %>%
mutate(arm = as.character(armlevel))
arm
res <- feats %>%
inner_join(status) %>%
mutate(group=case_when(status == "cancer" ~ "Lung cancer",
TRUE ~ "Non-cancer"),
group=factor(group, levels=c("Non-cancer",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
feats
status
res <- feats %>%
inner_join(status) %>%
mutate(group=case_when(status == "cancer" ~ "Lung cancer",
TRUE ~ "Non-cancer"),
group=factor(group, levels=c("Non-cancer",
"Lung cancer"))) %>%
inner_join(arms) %>%
mutate(armlevel=fct_reorder(armlevel, bin))
res
res$ratio.centered
text.dat <- res %>%
group_by(group) %>%
summarise(N=length(unique(id))) %>%
ungroup %>%
mutate(label=paste0(group, " (n=", N, ")"),
x=-Inf, y=Inf)
x.align <- 0.15
tgNC  <- textGrob(text.dat$label[1],
x=unit(x.align, "npc"),
y=unit(0.93, "npc"),
gp=gpar(cex=0.5, hjust=0))
tgLC  <- textGrob(text.dat$label[2],
x=unit(x.align, "npc"),
y=unit(0.48, "npc"),
gp=gpar(cex=0.5, hjust=0))
fig <- res %>%
ggplot(aes(x=bin, y=ratio.centered, group=id)) +
geom_line(color="grey", linewidth=0.1, alpha=0.8) +
coord_cartesian(ylim = c(-0.25, 0.25)) +
facet_grid(group~armlevel,
scales="free_x",
space="free_x",
switch="x") +
labs(y="Fragmentation Profile", x="") +
theme_classic(base_size = 6.5) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.y = element_blank(),
strip.background = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 7),
panel.spacing.y = unit(1, "cm", data=NULL),
plot.margin = unit(c(1, 0.5, 0, 0.5), "cm"))
gt_fig <- ggplot_gtable(ggplot_build(fig))
widths <- gt_fig$widths
widths_numeric <- as.numeric(widths)
which_facets <- str_detect(as.character(gt_fig$widths), "null")
which_small <- widths_numeric < 28.6
multipliers <- 28.6/widths_numeric
gt_fig$widths[which_facets & which_small] <- gt_fig$widths[which_facets & which_small] * multipliers[which_facets & which_small]
fig <- ggdraw(gt_fig) + draw_grob(tgNC) + draw_grob(tgLC)
fig
pdf("figure2a.pdf", height=3.25, width=7.08661)
fig
dev.off()
q()
